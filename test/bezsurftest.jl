using NURBS
using Base.Test

@testset "bezier surfaces parallel tests Building" begin
    
	arr = transpose([
        -100.0  -100.0    0.0
        -100.0   -50.0    0.0
        -100.0     0.0    0.0
        -100.0    50.0    0.0
        -100.0   100.0    0.0
         -50.0  -100.0    0.0
         -50.0   -50.0   25.0
         -50.0     0.0   50.0
         -50.0    50.0   25.0
         -50.0   100.0    0.0
           0.0  -100.0    0.0
           0.0   -50.0   25.0
           0.0     0.0   50.0
           0.0    50.0   25.0
           0.0   100.0    0.0
          50.0  -100.0    0.0
          50.0   -50.0   25.0
          50.0     0.0  150.0
          50.0    50.0   25.0
          50.0   100.0    0.0
         100.0  -100.0    0.0
         100.0   -50.0    0.0
         100.0     0.0    0.0
         100.0    50.0    0.0
         100.0   100.0    0.0
    ])

    P = transpose([
        -100.0  -100.0   0.0   
         -50.0  -100.0   0.0   
           0.0  -100.0   0.0   
          50.0  -100.0   0.0   
         100.0  -100.0   0.0   
        -100.0   -50.0   0.0   
         -50.0   -50.0  16.1224
           0.0   -50.0  24.7559
          50.0   -50.0  24.0326
         100.0   -50.0   0.0  
        -100.0     0.0   0.0   
         -50.0     0.0  22.998 
           0.0     0.0  36.7188
          50.0     0.0  37.0605
         100.0     0.0   0.0   
        -100.0    50.0   0.0   
         -50.0    50.0  16.1224
           0.0    50.0  24.7559
          50.0    50.0  24.0326
         100.0    50.0   0.0   
        -100.0   100.0   0.0   
         -50.0   100.0   0.0   
           0.0   100.0   0.0   
          50.0   100.0   0.0   
         100.0   100.0   0.0 
    ])

    EV = [
        [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8], [8, 9], [9, 10], [10, 11], [11, 12], [12, 13], [13, 14], [14, 15], [15, 16], [16, 17], [17, 18], [18, 19], [19, 20], [20, 21], [21, 22], [22, 23], [23, 24], [24, 25], [1, 6], [2, 7], [3, 8], [4, 9], [5, 10], [6, 11], [7, 12], [8, 13], [9, 14], [10, 15], [11, 16], [12, 17], [13, 18], [14, 19], [15, 20], [16, 21], [17, 22], [18, 23], [19, 24], [20, 25]
    ]

    FV = [
        [ 1,  2,  6,  7], 
        [ 2,  3,  7,  8],   
        [ 3,  4,  8,  9],    
        [ 4,  5,  9, 10],   
        [ 6,  7, 11, 12],  
        [ 7,  8, 12, 13], 
        [ 8,  9, 13, 14],  
        [ 9, 10, 14, 15], 
        [11, 12, 16, 17],
        [12, 13, 17, 18],
        [13, 14, 18, 19],
        [14, 15, 19, 20],
        [16, 17, 21, 22],
        [17, 18, 22, 23],
        [18, 19, 23, 24],
        [19, 20, 24, 25],
    ]

	res = [-100.0 -100.0 -100.0 -100.0 -25.9259 -25.9259 -25.9259 -25.9259 25.9259 25.9259 25.9259 25.9259 100.0 100.0 100.0 100.0; -100.0 -25.9259 25.9259 100.0 -100.0 -25.9259 25.9259 100.0 -100.0 -25.9259 25.9259 100.0 -100.0 -25.9259 25.9259 100.0; 0.0 0.0 0.0 0.0 0.0 34.8422 34.8422 0.0 0.0 51.3032 51.3032 0.0 0.0 0.0 0.0 0.0]

    @testset "Bezier surface with no explicit parallelization" begin
        @test typeof(bezsurfj(5, 5, arr, 5, 5)) == Tuple{Array{Float64,2}, Array{Array{Int64,1},1}, Array{Array{Int64,1},1}}
        @test isapprox(bezsurfj(5, 5, arr, 5, 5)[1], P; atol = 1e-3)
        @test bezsurfj(5, 5, arr, 5, 5)[2] == EV
        @test bezsurfj(5, 5, arr, 5, 5)[3] == FV
    end

    @testset "Bezier surface with parallelization 1" begin
        @test typeof(bezsurf1(5, 5, arr, 5, 5)) == Tuple{Array{Float64,2}, Array{Array{Int64,1},1}, Array{Array{Int64,1},1}}
        @test isapprox(bezsurf1(5, 5, arr, 5, 5)[1], P; atol = 1e-3)
        @test bezsurf1(5, 5, arr, 5, 5)[2] == EV
        @test bezsurf1(5, 5, arr, 5, 5)[3] == FV
    end

    @testset "Bezier surface with parallelization 2" begin
        @test typeof(bezsurf2(5, 5, arr, 5, 5)) == Tuple{Array{Float64,2}, Array{Array{Int64,1},1}, Array{Array{Int64,1},1}}
        @test isapprox(bezsurf2(5, 5, arr, 5, 5)[1], P; atol = 1e-3)
        @test bezsurf2(5, 5, arr, 5, 5)[2] == EV
        @test bezsurf2(5, 5, arr, 5, 5)[3] == FV
    end

    @testset "Bezier surface parallelization 3" begin
        @test typeof(bezsurf3(5, 5, arr, 5, 5)) == Tuple{Array{Float64,2}, Array{Array{Int64,1},1}, Array{Array{Int64,1},1}}
        @test isapprox(bezsurf3(5, 5, arr, 5, 5)[1], P; atol = 1e-3)
        @test bezsurf3(5, 5, arr, 5, 5)[2] == EV
        @test bezsurf3(5, 5, arr, 5, 5)[3] == FV
    end
end
